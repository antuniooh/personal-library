{"ast":null,"code":"/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\nexport function convertToStyles(object) {\n  /** The final result we will return */\n  var styles = {};\n\n  for (var key in object) {\n    /** Grab the value upfront */\n    var val = object[key];\n    /** TypeStyle configuration options */\n\n    if (key === '$nest') {\n      var nested = val;\n\n      for (var selector in nested) {\n        var subproperties = nested[selector];\n        styles[selector] = convertToStyles(subproperties);\n      }\n    } else if (key === '$debugName') {\n      styles.$displayName = val;\n    } else {\n      styles[key] = val;\n    }\n  }\n\n  return styles;\n} // todo: better name here\n\nexport function convertToKeyframes(frames) {\n  var result = {};\n\n  for (var offset in frames) {\n    if (offset !== '$debugName') {\n      result[offset] = frames[offset];\n    }\n  }\n\n  if (frames.$debugName) {\n    result.$displayName = frames.$debugName;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/antonio/personal-library/node_modules/typestyle/lib.es2015/internal/formatting.js"],"names":["convertToStyles","object","styles","key","val","nested","selector","subproperties","$displayName","convertToKeyframes","frames","result","offset","$debugName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;AACpC;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,GAAT,IAAgBF,MAAhB,EAAwB;AACpB;AACA,QAAIG,GAAG,GAAGH,MAAM,CAACE,GAAD,CAAhB;AACA;;AACA,QAAIA,GAAG,KAAK,OAAZ,EAAqB;AACjB,UAAIE,MAAM,GAAGD,GAAb;;AACA,WAAK,IAAIE,QAAT,IAAqBD,MAArB,EAA6B;AACzB,YAAIE,aAAa,GAAGF,MAAM,CAACC,QAAD,CAA1B;AACAJ,QAAAA,MAAM,CAACI,QAAD,CAAN,GAAmBN,eAAe,CAACO,aAAD,CAAlC;AACH;AACJ,KAND,MAOK,IAAIJ,GAAG,KAAK,YAAZ,EAA0B;AAC3BD,MAAAA,MAAM,CAACM,YAAP,GAAsBJ,GAAtB;AACH,KAFI,MAGA;AACDF,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcC,GAAd;AACH;AACJ;;AACD,SAAOF,MAAP;AACH,C,CACD;;AACA,OAAO,SAASO,kBAAT,CAA4BC,MAA5B,EAAoC;AACvC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,MAAT,IAAmBF,MAAnB,EAA2B;AACvB,QAAIE,MAAM,KAAK,YAAf,EAA6B;AACzBD,MAAAA,MAAM,CAACC,MAAD,CAAN,GAAiBF,MAAM,CAACE,MAAD,CAAvB;AACH;AACJ;;AACD,MAAIF,MAAM,CAACG,UAAX,EAAuB;AACnBF,IAAAA,MAAM,CAACH,YAAP,GAAsBE,MAAM,CAACG,UAA7B;AACH;;AACD,SAAOF,MAAP;AACH","sourcesContent":["/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\nexport function convertToStyles(object) {\n    /** The final result we will return */\n    var styles = {};\n    for (var key in object) {\n        /** Grab the value upfront */\n        var val = object[key];\n        /** TypeStyle configuration options */\n        if (key === '$nest') {\n            var nested = val;\n            for (var selector in nested) {\n                var subproperties = nested[selector];\n                styles[selector] = convertToStyles(subproperties);\n            }\n        }\n        else if (key === '$debugName') {\n            styles.$displayName = val;\n        }\n        else {\n            styles[key] = val;\n        }\n    }\n    return styles;\n}\n// todo: better name here\nexport function convertToKeyframes(frames) {\n    var result = {};\n    for (var offset in frames) {\n        if (offset !== '$debugName') {\n            result[offset] = frames[offset];\n        }\n    }\n    if (frames.$debugName) {\n        result.$displayName = frames.$debugName;\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}