{"ast":null,"code":"/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\n\nconst CSS_NUMBER = Object.create(null);\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\n\nconst CSS_NUMBER_KEYS = [\"animation-iteration-count\", \"border-image-outset\", \"border-image-slice\", \"border-image-width\", \"box-flex\", \"box-flex-group\", \"box-ordinal-group\", \"column-count\", \"columns\", \"counter-increment\", \"counter-reset\", \"flex\", \"flex-grow\", \"flex-positive\", \"flex-shrink\", \"flex-negative\", \"flex-order\", \"font-weight\", \"grid-area\", \"grid-column\", \"grid-column-end\", \"grid-column-span\", \"grid-column-start\", \"grid-row\", \"grid-row-end\", \"grid-row-span\", \"grid-row-start\", \"line-clamp\", \"line-height\", \"opacity\", \"order\", \"orphans\", \"tab-size\", \"widows\", \"z-index\", \"zoom\", // SVG properties.\n\"fill-opacity\", \"flood-opacity\", \"stop-opacity\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\"]; // Add vendor prefixes to all unit-less properties.\n\nfor (const property of CSS_NUMBER_KEYS) {\n  for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n/**\n * Escape a CSS class name.\n */\n\n\nfunction escape(str) {\n  return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n/**\n * Transform a JavaScript property into a CSS property.\n */\n\n\nfunction hyphenate(propertyName) {\n  return propertyName.replace(/[A-Z]/g, m => `-${m.toLowerCase()}`).replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n/**\n * Generate a hash value from a string.\n */\n\n\nfunction stringHash(str) {\n  let value = 5381;\n  let len = str.length;\n\n  while (len--) value = value * 33 ^ str.charCodeAt(len);\n\n  return (value >>> 0).toString(36);\n}\n/**\n * Transform a style string to a CSS string.\n */\n\n\nfunction styleToString(key, value) {\n  if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n    return `${key}:${value}px`;\n  }\n\n  return `${key}:${value}`;\n}\n/**\n * Sort an array of tuples by first value.\n */\n\n\nfunction sortTuples(value) {\n  return value.sort((a, b) => a[0] > b[0] ? 1 : -1);\n}\n/**\n * Categorize user styles.\n */\n\n\nfunction parseStyles(styles, hasNestedStyles) {\n  const properties = [];\n  const nestedStyles = []; // Sort keys before adding to styles.\n\n  for (const key of Object.keys(styles)) {\n    const name = key.trim();\n    const value = styles[key];\n\n    if (name.charCodeAt(0) !== 36\n    /* $ */\n    && value != null) {\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        nestedStyles.push([name, value]);\n      } else {\n        properties.push([hyphenate(name), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: !!styles.$unique\n  };\n}\n/**\n * Stringify an array of property tuples.\n */\n\n\nfunction stringifyProperties(properties) {\n  return properties.map(([name, value]) => {\n    if (!Array.isArray(value)) return styleToString(name, value);\n    return value.map(x => styleToString(name, x)).join(\";\");\n  }).join(\";\");\n}\n/**\n * Interpolate CSS selectors.\n */\n\n\nfunction interpolate(selector, parent) {\n  if (selector.indexOf(\"&\") === -1) return `${parent} ${selector}`;\n  return selector.replace(/&/g, parent);\n}\n/**\n * Recursive loop building styles with deferred selectors.\n */\n\n\nfunction stylize(selector, styles, rulesList, stylesList, parent) {\n  const {\n    style,\n    nested,\n    isUnique\n  } = parseStyles(styles, selector !== \"\");\n  let pid = style;\n\n  if (selector.charCodeAt(0) === 64\n  /* @ */\n  ) {\n      const child = {\n        selector,\n        styles: [],\n        rules: [],\n        style: parent ? \"\" : style\n      };\n      rulesList.push(child); // Nested styles support (e.g. `.foo > @media > .bar`).\n\n      if (style && parent) {\n        child.styles.push({\n          selector: parent,\n          style,\n          isUnique\n        });\n      }\n\n      for (const [name, value] of nested) {\n        pid += name + stylize(name, value, child.rules, child.styles, parent);\n      }\n    } else {\n    const key = parent ? interpolate(selector, parent) : selector;\n    if (style) stylesList.push({\n      selector: key,\n      style,\n      isUnique\n    });\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key);\n    }\n  }\n\n  return pid;\n}\n/**\n * Transform `stylize` tree into style objects.\n */\n\n\nfunction composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {\n  for (const {\n    selector,\n    style,\n    isUnique\n  } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector;\n    const id = isUnique ? `u\\0${(++uniqueId).toString(36)}` : `s\\0${pid}\\0${style}`;\n    const item = new Style(style, id);\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n    cache.add(item);\n  }\n\n  for (const {\n    selector,\n    style,\n    rules,\n    styles\n  } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n    composeStylize(item, pid, rules, styles, className, isStyle);\n    cache.add(item);\n  }\n}\n/**\n * Cache to list to styles.\n */\n\n\nfunction join(arr) {\n  let res = \"\";\n\n  for (let i = 0; i < arr.length; i++) res += arr[i];\n\n  return res;\n}\n/**\n * Noop changes.\n */\n\n\nconst noopChanges = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n};\n/**\n * Implement a cache/event emitter.\n */\n\nexport class Cache {\n  constructor(changes = noopChanges) {\n    this.changes = changes;\n    this.sheet = [];\n    this.changeId = 0;\n    this._keys = [];\n    this._children = Object.create(null);\n    this._counters = Object.create(null);\n  }\n\n  add(style) {\n    const count = this._counters[style.id] || 0;\n    const item = this._children[style.id] || style.clone();\n    this._counters[style.id] = count + 1;\n\n    if (count === 0) {\n      this._children[item.id] = item;\n\n      this._keys.push(item.id);\n\n      this.sheet.push(item.getStyles());\n      this.changeId++;\n      this.changes.add(item, this._keys.length - 1);\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id);\n\n      const prevItemChangeId = item.changeId;\n      item.merge(style);\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles());\n        this.changeId++;\n        this.changes.change(item, curIndex, curIndex);\n      }\n    }\n  }\n\n  remove(style) {\n    const count = this._counters[style.id];\n\n    if (count) {\n      this._counters[style.id] = count - 1;\n      const item = this._children[style.id];\n\n      const index = this._keys.indexOf(item.id);\n\n      if (count === 1) {\n        delete this._counters[style.id];\n        delete this._children[style.id];\n\n        this._keys.splice(index, 1);\n\n        this.sheet.splice(index, 1);\n        this.changeId++;\n        this.changes.remove(item, index);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId;\n        item.unmerge(style);\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, index, index);\n        }\n      }\n    }\n  }\n\n  values() {\n    return this._keys.map(key => this._children[key]);\n  }\n\n  merge(cache) {\n    for (const item of cache.values()) this.add(item);\n\n    return this;\n  }\n\n  unmerge(cache) {\n    for (const item of cache.values()) this.remove(item);\n\n    return this;\n  }\n\n  clone() {\n    return new Cache().merge(this);\n  }\n\n}\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\n\nexport class Selector {\n  constructor(selector, id) {\n    this.selector = selector;\n    this.id = id;\n  }\n\n  getStyles() {\n    return this.selector;\n  }\n\n  clone() {\n    return this;\n  }\n\n}\n/**\n * The style container registers a style string with selectors.\n */\n\nexport class Style extends Cache {\n  constructor(style, id) {\n    super();\n    this.style = style;\n    this.id = id;\n  }\n\n  getStyles() {\n    return `${this.sheet.join(\",\")}{${this.style}}`;\n  }\n\n  clone() {\n    return new Style(this.style, this.id).merge(this);\n  }\n\n}\n/**\n * Implement rule logic for style output.\n */\n\nexport class Rule extends Cache {\n  constructor(rule, style, id) {\n    super();\n    this.rule = rule;\n    this.style = style;\n    this.id = id;\n  }\n\n  getStyles() {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`;\n  }\n\n  clone() {\n    return new Rule(this.rule, this.style, this.id).merge(this);\n  }\n\n}\n\nfunction key(pid, styles) {\n  const key = `f${stringHash(pid)}`;\n  if (process.env.NODE_ENV === \"production\" || !styles.$displayName) return key;\n  return `${styles.$displayName}_${key}`;\n}\n/**\n * The FreeStyle class implements the API for everything else.\n */\n\n\nexport class FreeStyle extends Cache {\n  constructor(id, changes) {\n    super(changes);\n    this.id = id;\n  }\n\n  registerStyle(styles) {\n    const rulesList = [];\n    const stylesList = [];\n    const pid = stylize(\"&\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `.${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n    composeStylize(this, pid, rulesList, stylesList, selector, true);\n    return id;\n  }\n\n  registerKeyframes(keyframes) {\n    return this.registerHashRule(\"@keyframes\", keyframes);\n  }\n\n  registerHashRule(prefix, styles) {\n    const rulesList = [];\n    const stylesList = [];\n    const pid = stylize(\"\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `${prefix} ${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n    const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n    composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n    this.add(rule);\n    return id;\n  }\n\n  registerRule(rule, styles) {\n    const rulesList = [];\n    const stylesList = [];\n    const pid = stylize(rule, styles, rulesList, stylesList);\n    composeStylize(this, pid, rulesList, stylesList, \"\", false);\n  }\n\n  registerCss(styles) {\n    return this.registerRule(\"\", styles);\n  }\n\n  getStyles() {\n    return join(this.sheet);\n  }\n\n  clone() {\n    return new FreeStyle(this.id, this.changes).merge(this);\n  }\n\n}\n/**\n * Exports a simple function to create a new instance.\n */\n\nexport function create(changes) {\n  return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = number | boolean | string;\n\n/**\n * Input styles object.\n */\nexport interface Styles {\n  $unique?: boolean;\n  $displayName?: string;\n  [selector: string]:\n    | null\n    | undefined\n    | PropertyValue\n    | PropertyValue[]\n    | Styles;\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string;\n\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\nconst CSS_NUMBER: Record<string, true> = Object.create(null);\n\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER_KEYS = [\n  \"animation-iteration-count\",\n  \"border-image-outset\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"box-flex\",\n  \"box-flex-group\",\n  \"box-ordinal-group\",\n  \"column-count\",\n  \"columns\",\n  \"counter-increment\",\n  \"counter-reset\",\n  \"flex\",\n  \"flex-grow\",\n  \"flex-positive\",\n  \"flex-shrink\",\n  \"flex-negative\",\n  \"flex-order\",\n  \"font-weight\",\n  \"grid-area\",\n  \"grid-column\",\n  \"grid-column-end\",\n  \"grid-column-span\",\n  \"grid-column-start\",\n  \"grid-row\",\n  \"grid-row-end\",\n  \"grid-row-span\",\n  \"grid-row-start\",\n  \"line-clamp\",\n  \"line-height\",\n  \"opacity\",\n  \"order\",\n  \"orphans\",\n  \"tab-size\",\n  \"widows\",\n  \"z-index\",\n  \"zoom\",\n  // SVG properties.\n  \"fill-opacity\",\n  \"flood-opacity\",\n  \"stop-opacity\",\n  \"stroke-dasharray\",\n  \"stroke-dashoffset\",\n  \"stroke-miterlimit\",\n  \"stroke-opacity\",\n  \"stroke-width\"\n];\n\n// Add vendor prefixes to all unit-less properties.\nfor (const property of CSS_NUMBER_KEYS) {\n  for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n\n/**\n * Escape a CSS class name.\n */\nfunction escape(str: string) {\n  return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate(propertyName: string): string {\n  return propertyName\n    .replace(/[A-Z]/g, (m: string) => `-${m.toLowerCase()}`)\n    .replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n\n/**\n * Generate a hash value from a string.\n */\nfunction stringHash(str: string): string {\n  let value = 5381;\n  let len = str.length;\n  while (len--) value = (value * 33) ^ str.charCodeAt(len);\n  return (value >>> 0).toString(36);\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString(key: string, value: PropertyValue) {\n  if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n    return `${key}:${value}px`;\n  }\n\n  return `${key}:${value}`;\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples<T extends any[]>(value: T[]): T[] {\n  return value.sort((a, b) => (a[0] > b[0] ? 1 : -1));\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseStyles(styles: Styles, hasNestedStyles: boolean) {\n  const properties: Array<[string, PropertyValue | PropertyValue[]]> = [];\n  const nestedStyles: Array<[string, Styles]> = [];\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const name = key.trim();\n    const value = styles[key];\n\n    if (name.charCodeAt(0) !== 36 /* $ */ && value != null) {\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        nestedStyles.push([name, value]);\n      } else {\n        properties.push([hyphenate(name), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: !!styles.$unique\n  };\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties(\n  properties: Array<[string, PropertyValue | PropertyValue[]]>\n) {\n  return properties\n    .map(([name, value]) => {\n      if (!Array.isArray(value)) return styleToString(name, value);\n\n      return value.map(x => styleToString(name, x)).join(\";\");\n    })\n    .join(\";\");\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate(selector: string, parent: string) {\n  if (selector.indexOf(\"&\") === -1) return `${parent} ${selector}`;\n  return selector.replace(/&/g, parent);\n}\n\ntype StylizeStyle = { selector: string; style: string; isUnique: boolean };\n\ntype StylizeRule = {\n  selector: string;\n  style: string;\n  rules: StylizeRule[];\n  styles: StylizeStyle[];\n};\n\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize(\n  selector: string,\n  styles: Styles,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  parent?: string\n) {\n  const { style, nested, isUnique } = parseStyles(styles, selector !== \"\");\n  let pid = style;\n\n  if (selector.charCodeAt(0) === 64 /* @ */) {\n    const child: StylizeRule = {\n      selector,\n      styles: [],\n      rules: [],\n      style: parent ? \"\" : style\n    };\n    rulesList.push(child);\n\n    // Nested styles support (e.g. `.foo > @media > .bar`).\n    if (style && parent) {\n      child.styles.push({ selector: parent, style, isUnique });\n    }\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, child.rules, child.styles, parent);\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector;\n\n    if (style) stylesList.push({ selector: key, style, isUnique });\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key);\n    }\n  }\n\n  return pid;\n}\n\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize(\n  cache: Cache<Rule | Style>,\n  pid: string,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  className: string,\n  isStyle: boolean\n) {\n  for (const { selector, style, isUnique } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector;\n    const id = isUnique\n      ? `u\\0${(++uniqueId).toString(36)}`\n      : `s\\0${pid}\\0${style}`;\n    const item = new Style(style, id);\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n    cache.add(item);\n  }\n\n  for (const { selector, style, rules, styles } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n    composeStylize(item, pid, rules, styles, className, isStyle);\n    cache.add(item);\n  }\n}\n\n/**\n * Cache to list to styles.\n */\nfunction join(arr: string[]): string {\n  let res = \"\";\n  for (let i = 0; i < arr.length; i++) res += arr[i];\n  return res;\n}\n\n/**\n * Propagate change events.\n */\nexport interface Changes {\n  add(style: Container<any>, index: number): void;\n  change(style: Container<any>, oldIndex: number, newIndex: number): void;\n  remove(style: Container<any>, index: number): void;\n}\n\n/**\n * Noop changes.\n */\nconst noopChanges: Changes = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n};\n\n/**\n * Cache-able interface.\n */\nexport interface Container<T> {\n  id: string;\n  clone(): T;\n  getStyles(): string;\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache<T extends Container<any>> {\n  sheet: string[] = [];\n  changeId = 0;\n\n  private _keys: string[] = [];\n  private _children: Record<string, T | undefined> = Object.create(null);\n  private _counters: Record<string, number | undefined> = Object.create(null);\n\n  constructor(public changes: Changes = noopChanges) {}\n\n  add(style: T): void {\n    const count = this._counters[style.id] || 0;\n    const item: T = this._children[style.id] || style.clone();\n\n    this._counters[style.id] = count + 1;\n\n    if (count === 0) {\n      this._children[item.id] = item;\n      this._keys.push(item.id);\n      this.sheet.push(item.getStyles());\n      this.changeId++;\n      this.changes.add(item, this._keys.length - 1);\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id);\n      const prevItemChangeId = item.changeId;\n\n      item.merge(style);\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles());\n        this.changeId++;\n        this.changes.change(item, curIndex, curIndex);\n      }\n    }\n  }\n\n  remove(style: T): void {\n    const count = this._counters[style.id];\n\n    if (count) {\n      this._counters[style.id] = count - 1;\n\n      const item = this._children[style.id]!;\n      const index = this._keys.indexOf(item.id);\n\n      if (count === 1) {\n        delete this._counters[style.id];\n        delete this._children[style.id];\n\n        this._keys.splice(index, 1);\n        this.sheet.splice(index, 1);\n        this.changeId++;\n        this.changes.remove(item, index);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId;\n\n        item.unmerge(style);\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, index, index);\n        }\n      }\n    }\n  }\n\n  values(): T[] {\n    return this._keys.map(key => this._children[key]!);\n  }\n\n  merge(cache: Cache<any>) {\n    for (const item of cache.values()) this.add(item);\n    return this;\n  }\n\n  unmerge(cache: Cache<any>) {\n    for (const item of cache.values()) this.remove(item);\n    return this;\n  }\n\n  clone(): Cache<T> {\n    return new Cache<T>().merge(this);\n  }\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n  constructor(public selector: string, public id: string) {}\n\n  getStyles() {\n    return this.selector;\n  }\n\n  clone(): Selector {\n    return this;\n  }\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n  constructor(public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.sheet.join(\",\")}{${this.style}}`;\n  }\n\n  clone(): Style {\n    return new Style(this.style, this.id).merge(this);\n  }\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n  constructor(public rule: string, public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`;\n  }\n\n  clone(): Rule {\n    return new Rule(this.rule, this.style, this.id).merge(this);\n  }\n}\n\nfunction key(pid: string, styles: Styles): string {\n  const key = `f${stringHash(pid)}`;\n  if (process.env.NODE_ENV === \"production\" || !styles.$displayName) return key;\n  return `${styles.$displayName}_${key}`;\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style>\n  implements Container<FreeStyle> {\n  constructor(public id: string, changes?: Changes) {\n    super(changes);\n  }\n\n  registerStyle(styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"&\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `.${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    composeStylize(this, pid, rulesList, stylesList, selector, true);\n    return id;\n  }\n\n  registerKeyframes(keyframes: Styles) {\n    return this.registerHashRule(\"@keyframes\", keyframes);\n  }\n\n  registerHashRule(prefix: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `${prefix} ${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n    composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n    this.add(rule);\n    return id;\n  }\n\n  registerRule(rule: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(rule, styles, rulesList, stylesList);\n    composeStylize(this, pid, rulesList, stylesList, \"\", false);\n  }\n\n  registerCss(styles: Styles) {\n    return this.registerRule(\"\", styles);\n  }\n\n  getStyles(): string {\n    return join(this.sheet);\n  }\n\n  clone(): FreeStyle {\n    return new FreeStyle(this.id, this.changes).merge(this);\n  }\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create(changes?: Changes) {\n  return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}